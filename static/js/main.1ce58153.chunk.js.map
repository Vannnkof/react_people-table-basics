{"version":3,"sources":["components/PageNavigation.tsx","components/Page.tsx","components/HomePage.tsx","components/PersonLink.tsx","utils/variables.ts","components/PersonItem.tsx","components/PeopleList.tsx","components/Loader/Loader.tsx","api.ts","components/PeoplePage.tsx","utils/PeopleUtils.ts","components/PageNotFound.tsx","App.tsx","index.tsx"],"names":["PageNavigation","getLinkClass","isActive","classNames","className","role","to","Page","HomePage","PersonLink","person","slug","sex","name","PersonItem","selectedSlug","born","died","fatherName","motherName","father","mother","PeopleList","people","useParams","personSlug","map","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","currentPeople","find","getPreparedPeople","catch","finally","isDisplayErrorMessage","isNoPeopleOnServer","length","isPeopleOnServer","PageNotFound","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1ce58153.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const PageNavigation = () => {\n  const getLinkClass = (\n    { isActive }: { isActive: boolean },\n  ) => classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { PageNavigation } from './PageNavigation';\n\nexport const Page = () => {\n  return (\n    <>\n      <PageNavigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport classNames from 'classnames';\n\nimport { Person } from '../types';\nimport { SEX_FEMALE } from '../utils/variables';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={slug}\n      className={\n        classNames({\n          'has-text-danger': sex === SEX_FEMALE,\n        })\n      }\n    >\n      {name}\n    </Link>\n  );\n};\n","export const SEX_MALE = 'm';\nexport const SEX_FEMALE = 'f';\nexport const NOT_SET_VALUE = '-';\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { NOT_SET_VALUE } from '../utils/variables';\n\ntype Props = {\n  person: Person;\n  selectedSlug: string;\n};\n\nexport const PersonItem: React.FC<Props> = ({ person, selectedSlug }) => {\n  const {\n    born,\n    died,\n    fatherName,\n    motherName,\n    sex,\n    father,\n    mother,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      className={\n        classNames({ 'has-background-warning': selectedSlug === slug })\n      }\n      data-cy=\"person\"\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || NOT_SET_VALUE\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || NOT_SET_VALUE\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonItem } from './PersonItem';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const { personSlug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n            selectedSlug={personSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\n\nimport { Person } from '../types';\nimport { PeopleList } from './PeopleList';\nimport { getPreparedPeople } from '../utils/PeopleUtils';\nimport { Loader } from './Loader';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(currentPeople => {\n        setPeople(getPreparedPeople(currentPeople));\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const isDisplayErrorMessage = isError && !isLoading;\n\n  const isNoPeopleOnServer = !people.length && !isLoading && !isError;\n\n  const isPeopleOnServer = !!people.length && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isDisplayErrorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isPeopleOnServer && (\n            <PeopleList people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function getPreparedPeople(people: Person[]) {\n  return people.map(person => {\n    return {\n      ...person,\n      mother: people.find(mother => mother.name === person.motherName),\n      father: people.find(father => father.name === person.fatherName),\n    };\n  });\n}\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport { Page } from './components/Page';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Routes>\n      <Route path=\"/\" element={<Page />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":personSlug\" />\n        </Route>\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Route>\n    </Routes>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}